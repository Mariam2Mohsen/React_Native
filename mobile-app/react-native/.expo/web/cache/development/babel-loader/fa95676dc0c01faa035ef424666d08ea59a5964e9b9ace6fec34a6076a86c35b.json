{"ast":null,"code":"","map":{"version":3,"names":[],"sources":["F:/iti network/js/React Native/code1/code/src/pages/Home.jsx"],"sourcesContent":["// import {\n//   View,\n//   Text,\n//   TouchableOpacity,\n//   StyleSheet,\n//   TextInput,\n//   Platform,\n// } from \"react-native\";\n// import React, { useEffect, useState } from \"react\";\n// import Todos from \"../components/Todos\";\n// import AsyncStorage from '@react-native-async-storage/async-storage';\n// const Home = ({}) => {\n//   const [todos, setTodos] = useState([]);\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n\n//   useEffect(()=>{\n// trackStorage();\n// },[])\n// const trackStorage =async()=>{\n//   const asyncTodos=await AsyncStorage.getItem('todos');\n//   if(asyncTodos) \n//   setTodos(JSON.parse(asyncTodos))\n// }\n//   const addTodo = async () => {\n//     if (title) {\n//       const singleTodo = {\n//         id: Date.now(),\n//         done: false,\n//         title,\n//         description,\n//       };\n\n//       // Check if the todo already exists\n//       const existingTodo = todos.find((todo) => todo.title === title);\n\n//       // If the todo doesn't exist, add it to the todos array\n//       if (!existingTodo) {\n//         const allTodos = [...todos, singleTodo];\n//         await AsyncStorage.setItem('todos',JSON.stringify(allTodos));\n\n//         setTodos(allTodos);\n//       }\n//     }\n\n   \n//   };\n  \n\n//   return (\n//     <View\n//       style={{\n//         flex: 1,\n//         alignItems: \"center\",\n//         justifyContent: \"flex-start\",\n//         paddingTop: 50,\n//         backgroundColor: Platform.OS === \"ios\" ? \"black\" : \"gainsboro\",\n//       }}\n//     >\n//       <Text style={styles.title}>ToDo List </Text>\n//       <TextInput\n//         onChangeText={(value) => setTitle(value)}\n//         style={styles.input}\n//         placeholder=\"Enter Your Title\"\n//       />\n//       <TextInput\n//         onChangeText={(value) => setDescription(value)}\n//         style={styles.input}\n//         placeholder=\"Enter Your Description\"\n//       />\n//       <TouchableOpacity style={styles.button} onPress={addTodo}>\n//         <Text style={{ color: \"#fff\", fontSize: 20 }}>Save</Text>\n//       </TouchableOpacity>\n//       {todos.length !== 0 && (\n//         <>\n//           <View style={styles.divider} />\n//           <Todos todos={todos} />\n//         </>\n//       )}\n//     </View>\n//   );\n// };\n\n// const styles = StyleSheet.create({\n//   title: {\n//     fontWeight: \"500\",\n//     fontSize: 25,\n//     marginBottom: 15,\n//   },\n//   input: {\n//     borderWidth: 1,\n//     borderColor: \"green\",\n//     borderRadius: 5,\n//     paddingVertical: 10,\n//     paddingHorizontal: 15,\n//     marginBottom: 15,\n//     width: 300,\n//     textAlign: \"center\",\n//   },\n//   button: {\n//     padding: 5,\n//     backgroundColor: \"black\",\n//     borderRadius: 5,\n//     height: 40,\n//     paddingHorizontal: 40,\n//   },\n//   divider: {\n//     width: \"95%\",\n//     height: 1,\n//     backgroundColor: \"gray\",\n//     marginVertical: 20,\n//   },\n// });\n// export default Home;\n\n\n\n////////////////////////////////////////////////\n// import React, { useEffect, useState } from \"react\";\n// import {\n//   View,\n//   Text,\n//   TouchableOpacity,\n//   StyleSheet,\n//   TextInput,\n//   Platform,\n// } from \"react-native\";\n// import AsyncStorage from '@react-native-async-storage/async-storage';\n\n// const Home = ({}) => {\n//   const [todos, setTodos] = useState([]);\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n\n//   useEffect(() => {\n//     trackStorage();\n//   }, []);\n\n//   const trackStorage = async () => {\n//     const asyncTodos = await AsyncStorage.getItem('todos');\n//     if (asyncTodos) \n//       setTodos(JSON.parse(asyncTodos));\n//   };\n\n//   const addTodo = async () => {\n//     if (title) {\n//       const singleTodo = {\n//         id: Date.now(),\n//         done: false,\n//         title,\n//         description,\n//       };\n\n//       // Check if the todo already exists\n//       const existingTodo = todos.find((todo) => todo.title === title);\n\n//       // If the todo doesn't exist, add it to the todos array\n//       if (!existingTodo) {\n//         const allTodos = [...todos, singleTodo];\n//         await AsyncStorage.setItem('todos', JSON.stringify(allTodos));\n//         setTodos(allTodos);\n//       }\n//     }\n//   };\n\n//   const deleteTodo = async (id) => {\n//     const updatedTodos = todos.filter((todo) => todo.id !== id);\n//     await AsyncStorage.setItem('todos', JSON.stringify(updatedTodos));\n//     setTodos(updatedTodos);\n//   };\n\n//   return (\n//     <View\n//       style={{\n//         flex: 1,\n//         alignItems: \"center\",\n//         justifyContent: \"flex-start\",\n//         paddingTop: 50,\n//         backgroundColor: Platform.OS === \"ios\" ? \"black\" : \"gainsboro\",\n//       }}\n//     >\n//       <Text style={styles.title}>ToDo List </Text>\n//       <TextInput\n//         onChangeText={(value) => setTitle(value)}\n//         style={styles.input}\n//         placeholder=\"Enter Your Title\"\n//       />\n//       <TextInput\n//         onChangeText={(value) => setDescription(value)}\n//         style={styles.input}\n//         placeholder=\"Enter Your Description\"\n//       />\n//       <TouchableOpacity style={styles.button} onPress={addTodo}>\n//         <Text style={{ color: \"#fff\", fontSize: 20 }}>Save</Text>\n//       </TouchableOpacity>\n//       {todos.length !== 0 && (\n//         <>\n//           <View style={styles.divider} />\n//                     <Todos todos={todos} />\n\n//           {todos.map((todo) => (\n//             // <View key={todo.id} style={styles.todoContainer}>\n//             //   <Text style={styles.todoTitle}>{todo.title}</Text>\n//             //   <Text style={styles.todoDescription}>{todo.description}</Text>\n//               <TouchableOpacity\n//                 style={styles.deleteButton}\n//                 onPress={() => deleteTodo(todo.id)}\n//               >\n//                 <Text style={{ color: \"#fff\" }}>Delete</Text>\n//               </TouchableOpacity>\n//             // </View>\n//           ))}\n//         </>\n//       )}\n//     </View>\n//   );\n// };\n\n// const styles = StyleSheet.create({\n//   title: {\n//     fontWeight: \"500\",\n//     fontSize: 25,\n//     marginBottom: 15,\n//   },\n//   input: {\n//     borderWidth: 1,\n//     borderColor: \"green\",\n//     borderRadius: 5,\n//     paddingVertical: 10,\n//     paddingHorizontal: 15,\n//     marginBottom: 15,\n//     width: 300,\n//     textAlign: \"center\",\n//   },\n//   button: {\n//     padding: 5,\n//     backgroundColor: \"black\",\n//     borderRadius: 5,\n//     height: 40,\n//     paddingHorizontal: 40,\n//   },\n//   divider: {\n//     width: \"95%\",\n//     height: 1,\n//     backgroundColor: \"gray\",\n//     marginVertical: 20,\n//   },\n//   todoContainer: {\n//     marginBottom: 15,\n//     alignItems: \"center\",\n//   },\n//   todoTitle: {\n//     fontWeight: \"500\",\n//     fontSize: 20,\n//   },\n//   todoDescription: {\n//     fontSize: 16,\n//   },\n//   deleteButton: {\n//     marginTop: 5,\n//     padding: 5,\n//     backgroundColor: \"red\",\n//     borderRadius: 5,\n//     height: 30,\n//     paddingHorizontal: 15,\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//   },\n// });\n\n// export default Home;"],"mappings":""},"metadata":{},"sourceType":"script","externalDependencies":[]}